{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","components/pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","setIsEntering","authorInputRef","useRef","textInputRef","onFocus","console","log","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","navigate","useNavigate","useEffect","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,mB,qBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,2B,0GCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,UAC7C,E,yBCgEcC,EA9DG,SAACL,GACjB,MAAoCM,oBAAS,GAA7C,mBAAmBC,GAAnB,WACMC,EAAiBC,mBACjBC,EAAeD,mBAsBrB,OACE,mCAKE,cAAC,EAAD,UACE,uBACEE,QAbmB,WACzBC,QAAQC,IAAI,WACZN,GAAc,EACf,EAWON,UAAWC,IAAQY,KACnBC,SA9BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBV,EAAeW,QAAQC,MACvCC,EAAcX,EAAaS,QAAQC,MAIzCpB,EAAMsB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GACjD,EAkBK,UAKGrB,EAAMyB,WACL,qBAAKxB,UAAWC,IAAQwB,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK1B,UAAWC,IAAQ0B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKxB,OAEtC,sBAAKP,UAAWC,IAAQ0B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKtB,OAEpC,qBAAKT,UAAWC,IAAQgC,QAAxB,SACE,wBAAQC,QApCY,WAC5B5B,GAAc,EACf,EAkCiDN,UAAU,MAAlD,+BAQX,ECzCcmC,UAnBE,WACf,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,EAAWC,cAEjBC,qBAAU,WACO,cAAXH,GACFC,EAAS,UAEZ,GAAE,CAACD,EAAQC,IAMZ,OACE,cAAC,EAAD,CAAWhB,UAAsB,YAAXe,EAAsBlB,WALtB,SAACsB,GACvBL,EAAYK,EACb,GAKF,C","file":"static/js/3.56a2afb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__aOCce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__2Z_jn\",\"loading\":\"QuoteForm_loading__3TQNd\",\"control\":\"QuoteForm_control__GVjEq\",\"actions\":\"QuoteForm_actions__3xcN6\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    console.log(\"focused\");\n    setIsEntering(true);\n  };\n\n  return (\n    <>\n      {/* \n      // Not working in v6 for now\n      <Prompt when={isEntering} message={(location)=> 'Are you sure you want to leave? All your entered data will be lost'} />\n      */}\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport { addQuote } from \"../../lib/api\";\r\nimport QuoteForm from \"../quotes/QuoteForm\";\r\n\r\nconst NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      navigate(\"/quotes\");\r\n    }\r\n  }, [status, navigate]);\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n  };\r\n\r\n  return (\r\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\r\n  );\r\n};\r\n\r\nexport default NewQuote;\r\n"],"sourceRoot":""}